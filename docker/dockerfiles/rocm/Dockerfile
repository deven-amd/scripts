FROM ubuntu:16.04
MAINTAINER Deven Desai <deven.desai.amd@gmail.com>

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends sudo

ARG user=rocm-user

# ARG ROCM_DEB_REPO=http://repo.radeon.com/rocm/apt/3.1/
# RUN wget -qO - $ROCM_DEB_REPO/rocm.gpg.key | apt-key add -
# RUN sh -c "echo deb [arch=amd64] $ROCM_DEB_REPO xenial main > /etc/apt/sources.list.d/rocm.list"

ARG ROCM_INTERNAL_ARTIFACTORY=http://compute-artifactory.amd.com/artifactory/list/rocm-osdb-deb/
# ARG ROCM_BUILD_NAME=compute-rocm-dkms-no-npi-hipclang-int-bkc-2
# ARG ROCM_BUILD_NUM=40
ARG ROCM_BUILD_NAME=compute-rocm-dkms-no-npi-hipclang
ARG ROCM_BUILD_NUM=2272
RUN sh -c "echo deb [arch=amd64 trusted=yes] $ROCM_INTERNAL_ARTIFACTORY $ROCM_BUILD_NAME $ROCM_BUILD_NUM > /etc/apt/sources.list.d/rocm.list"

ENV ROCM_PATH=/opt/rocm-3.5.0-2272

# Install ROCm pkgs
RUN apt-get update --allow-insecure-repositories && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --allow-unauthenticated \
    hipblas \
    hipcub \
    miopen-hip \
    miopengemm \
    rccl \
    rocblas \
    rocfft \
    rocm-cmake \
    rocm-dev \
    rocm-libs \
    rocm-utils \
    rocrand \
    && \
    apt-get clean \
    && \
    rm -rf /var/lib/apt/lists/*

# Install pkgs required by ROCm 
RUN apt-get update --allow-insecure-repositories && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --allow-unauthenticated \
    kmod \
    pciutils \
    && \
    apt-get clean \
    && \
    rm -rf /var/lib/apt/lists/*

# Add target file to help determine which device(s) to build for
RUN rm -rf ${ROCM_PATH}/bin/target.lst
RUN bash -c 'echo -e "gfx900\ngfx906\ngfx908" >> ${ROCM_PATH}/bin/target.lst'

ENV HIP_PATH=$ROCM_PATH/hip
# ENV OPENCL_ROOT=$ROCM_PATH/opencl

ENV PATH="$HIP_PATH/bin:${PATH}"
# ENV PATH="$OPENCL_ROOT/bin:${PATH}"
ENV PATH="$ROCM_PATH/bin:${PATH}"


RUN useradd --create-home $user
RUN usermod --append --groups sudo $user
RUN passwd -d $user

USER $user
WORKDIR /home/$user
#
# Run an dummy sudo command to suppress the following message
# (which will otherwise appear evertyime you start the container)
# --- 
# To run a command as administrator (user "root"), use "sudo <command>".
# See "man sudo_root" for details.
# --- 
#
RUN sudo echo

CMD /bin/bash
